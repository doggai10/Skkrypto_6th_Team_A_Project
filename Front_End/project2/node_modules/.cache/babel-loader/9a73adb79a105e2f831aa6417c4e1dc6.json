{"ast":null,"code":"/**\n * Copyright 2018 The caver-js Authors\n * This file is part of the caver-js library.\n *\n * The caver-js library is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The caver-js library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with the go-klayton library. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file fileLogger.js\n * @author Hoonil Kim <satoshi.kim@groundx.xyz>\n * @date 2018\n */\n// const fs = typeof window !== 'object' && require('fs') || {}\nconst fs = {};\nconst DEFAULT_FILE_PATH = './';\nconst DEFAULT_FILE_NAME = 'rpcLogs';\nconst DEFAULT_FILE_EXTENSION = 'log';\n\nconst guaranteeFilePath = filePath => {\n  return filePath.slice(-1) !== '/' ? filePath + '/' : filePath;\n};\n\nconst appendToFile = (filePath, contents) => {\n  fs.appendFileSync(filePath, contents + '\\n', err => {\n    if (err) throw err;\n  });\n};\n\nconst fileLogger = (options = {}) => (data, next) => {\n  if (typeof options !== 'object') {\n    throw Error('file logger must take an object type argument.');\n  }\n\n  options.path = guaranteeFilePath(options.path) || DEFAULT_FILE_PATH;\n  options.name = options.name || DEFAULT_FILE_NAME;\n  options.extension = options.extension || DEFAULT_FILE_EXTENSION;\n  const fileName = \"\".concat(options.path).concat(options.name, \".\").concat(options.extension); // Add timestamp for RPC request || response.\n\n  data.timestamp = new Date().getTime();\n\n  switch (options.extension) {\n    case 'csv':\n      // TODO: stringify to csv.\n      appendToFile(fileName, JSON.stringify(data));\n      break;\n\n    default:\n      appendToFile(fileName, JSON.stringify(data));\n  }\n\n  next();\n};\n\nmodule.exports = fileLogger;","map":null,"metadata":{},"sourceType":"script"}