{"ast":null,"code":"var _jsxFileName = \"/Users/heeje/Desktop/Projcet_A/Front_End/project2/src/Routes/FundingApply/ApplyContainer.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ApplyPresenter from \"./ApplyrPresenter\";\nimport Http from \"Api/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { cav } from \"Caver/caver\";\nimport Contract from \"Contracts/contract\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\nconst Container = styled.div`\n    overflow: auto;\n`;\n\nfunction getToday() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = (\"0\" + (1 + date.getMonth())).slice(-2);\n  const day = (\"0\" + date.getDate()).slice(-2);\n  const hours = date.getHours();\n  return year + month + day + hours;\n}\n\nconst ApplyContainer = () => {\n  const [wallet, setWallet] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [sale, setSale] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [money, setMoney] = useState(null);\n  const [quantity, setQuantity] = useState(null);\n  const history = useHistory();\n\n  const handleWallet = e => {\n    setWallet(e.target.value);\n  };\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleContent = e => {\n    setContent(e.target.value);\n  };\n\n  const handleSale = e => {\n    setSale(e.target.value);\n  };\n\n  const handleMoney = e => {\n    setMoney(e.target.value);\n  };\n\n  const handleQuantity = e => {\n    setQuantity(e.target.value);\n  };\n\n  const handleForm = async e => {\n    e.preventDefault();\n    const date = getToday(startDate);\n    const info = {\n      wallet,\n      name,\n      content,\n      sale,\n      date,\n      money,\n      quantity\n    };\n    const contractInstance = new cav.contract(Contract.abi, Contract.address);\n    console.log(contractInstance);\n    const deployer = cav.wallet.keyring.createFromPrivateKey(wallet);\n    cav.wallet.add(deployer);\n\n    try {\n      const respose = await Http.post(\"/apply\", info);\n      const funding = await contractInstance.methods.createFunding(deployer.address, sale, Date.now(), quantity, money).call();\n      const klay = cav.utils.convertToPeb(money, \"Ston\");\n      const find = await contractInstance.methods.findTarget(deployer.address, sale, klay).send({\n        from: deployer.address,\n        gas: \"250000\"\n      });\n      console.log(respose);\n      console.log(funding, find);\n      alert(\"저장 성공!\");\n      alert(\"관리자 검토 후 등록 완료됩니다.\");\n    } catch (e) {\n      console.log(e);\n    }\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ApplyPresenter, {\n    wallet: wallet,\n    name: name,\n    content: content,\n    sale: sale,\n    startDate: startDate,\n    money: money,\n    quantity: quantity,\n    handleWallet: handleWallet,\n    handleName: handleName,\n    handleContent: handleContent,\n    handleSale: handleSale,\n    handleForm: handleForm,\n    setStartDate: setStartDate,\n    handleMoney: handleMoney,\n    handleQuantity: handleQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ApplyContainer;","map":{"version":3,"sources":["/Users/heeje/Desktop/Projcet_A/Front_End/project2/src/Routes/FundingApply/ApplyContainer.js"],"names":["React","useState","styled","ApplyPresenter","Http","useHistory","cav","Contract","Spin","Container","div","getToday","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","ApplyContainer","wallet","setWallet","name","setName","content","setContent","sale","setSale","startDate","setStartDate","money","setMoney","quantity","setQuantity","history","handleWallet","e","target","value","handleName","handleContent","handleSale","handleMoney","handleQuantity","handleForm","preventDefault","info","contractInstance","contract","abi","address","console","log","deployer","keyring","createFromPrivateKey","add","respose","post","funding","methods","createFunding","now","call","klay","utils","convertToPeb","find","findTarget","send","from","gas","alert","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ApplyPresenter from \"./ApplyrPresenter\";\nimport Http from \"Api/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { cav } from \"Caver/caver\";\nimport Contract from \"Contracts/contract\";\nimport \"antd/dist/antd.css\";\nimport { Spin } from \"antd\";\n\nconst Container = styled.div`\n    overflow: auto;\n`;\n\nfunction getToday() {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = (\"0\" + (1 + date.getMonth())).slice(-2);\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = date.getHours();\n    return year + month + day + hours;\n}\n\nconst ApplyContainer = () => {\n    const [wallet, setWallet] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [sale, setSale] = useState(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n    const [money, setMoney] = useState(null);\n    const [quantity, setQuantity] = useState(null);\n\n    const history = useHistory();\n    const handleWallet = (e) => {\n        setWallet(e.target.value);\n    };\n\n    const handleName = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleContent = (e) => {\n        setContent(e.target.value);\n    };\n\n    const handleSale = (e) => {\n        setSale(e.target.value);\n    };\n\n    const handleMoney = (e) => {\n        setMoney(e.target.value);\n    };\n\n    const handleQuantity = (e) => {\n        setQuantity(e.target.value);\n    };\n    const handleForm = async (e) => {\n        e.preventDefault();\n\n        const date = getToday(startDate);\n        const info = {\n            wallet,\n            name,\n            content,\n            sale,\n            date,\n            money,\n            quantity,\n        };\n        const contractInstance = new cav.contract(\n            Contract.abi,\n            Contract.address\n        );\n        console.log(contractInstance);\n\n        const deployer = cav.wallet.keyring.createFromPrivateKey(wallet);\n        cav.wallet.add(deployer);\n\n        try {\n            const respose = await Http.post(\"/apply\", info);\n            const funding = await contractInstance.methods\n                .createFunding(\n                    deployer.address,\n                    sale,\n                    Date.now(),\n                    quantity,\n                    money\n                )\n                .call();\n            const klay = cav.utils.convertToPeb(money, \"Ston\");\n            const find = await contractInstance.methods\n                .findTarget(deployer.address, sale, klay)\n                .send({\n                    from: deployer.address,\n                    gas: \"250000\",\n                });\n            console.log(respose);\n            console.log(funding, find);\n            alert(\"저장 성공!\");\n            alert(\"관리자 검토 후 등록 완료됩니다.\");\n        } catch (e) {\n            console.log(e);\n        }\n        history.push(\"/\");\n    };\n\n    return (\n        <Container>\n            <ApplyPresenter\n                wallet={wallet}\n                name={name}\n                content={content}\n                sale={sale}\n                startDate={startDate}\n                money={money}\n                quantity={quantity}\n                handleWallet={handleWallet}\n                handleName={handleName}\n                handleContent={handleContent}\n                handleSale={handleSale}\n                handleForm={handleForm}\n                setStartDate={setStartDate}\n                handleMoney={handleMoney}\n                handleQuantity={handleQuantity}\n            ></ApplyPresenter>\n        </Container>\n    );\n};\n\nexport default ApplyContainer;\n"]},"metadata":{},"sourceType":"module"}