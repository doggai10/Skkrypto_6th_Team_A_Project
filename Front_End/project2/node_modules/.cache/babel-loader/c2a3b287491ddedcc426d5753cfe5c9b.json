{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core-requestmanager/src/batch.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file batch.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\nconst Jsonrpc = require('./jsonrpc');\n\nconst errors = require('../../caver-core-helpers').errors;\n\nconst Batch = function (requestManager) {\n  this.requestManager = requestManager;\n  this.requests = [];\n};\n\nBatch.prototype.add = function (request) {\n  this.requests.push(request);\n};\n\nBatch.prototype.execute = function () {\n  const requests = this.requests;\n  this.requestManager.sendBatch(requests, function (err, results) {\n    results = results || [];\n    requests.map(function (request, index) {\n      return results[index] || {};\n    }).forEach(function (result, index) {\n      /**\n       * if callback is defined in requests[index]\n       * 1) Check result.error - if existed throw ErrorResponse.\n       * 2) Check result is valid json response object - if invalid throw InvalidResponse.\n       * 3) After passing 1) 2), if there is format method in requests[index] do formatting, and then callback.\n       */\n      if (requests[index].callback) {\n        if (result && result.error) {\n          return requests[index].callback(errors.ErrorResponse(result));\n        }\n\n        if (!Jsonrpc.isValidResponse(result)) {\n          return requests[index].callback(errors.InvalidResponse(result));\n        }\n\n        requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result);\n      }\n    });\n  });\n};\n\nmodule.exports = Batch;","map":null,"metadata":{},"sourceType":"script"}