{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of the web3.js library.\n\n    The web3.js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The web3.js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the web3.js. If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core-promievent/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\nconst EventEmitter = require('eventemitter3');\n\nconst mergeEmitterProp = obj => {\n  const emitter = new EventEmitter();\n  Object.entries(emitter.__proto__).reduce((acc, [k, v]) => (acc[k] = v, acc), obj);\n  obj._events = emitter._events;\n  obj._eventsCount = emitter._eventsCount;\n  return obj;\n};\n\nfunction PromiEvent(promiseOnly) {\n  let resolve;\n  let reject;\n  const promiseInstance = new Promise((resolver, rejecter) => {\n    resolve = resolver;\n    reject = rejecter;\n  });\n  const eventEmitter = promiseOnly ? promiseInstance : mergeEmitterProp(promiseInstance);\n  return {\n    resolve,\n    reject,\n    eventEmitter: eventEmitter\n  };\n}\n\nPromiEvent.resolve = function (value) {\n  const promise = PromiEvent(true); // promiseOnly\n\n  promise.resolve(value);\n  return promise.eventEmitter;\n};\n\nmodule.exports = PromiEvent;","map":null,"metadata":{},"sourceType":"script"}