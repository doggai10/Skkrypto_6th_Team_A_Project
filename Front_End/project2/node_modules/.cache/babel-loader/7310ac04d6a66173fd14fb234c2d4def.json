{"ast":null,"code":"var _jsxFileName = \"/Users/heeje/Desktop/Projcet_A/Front_End/react-dapp/client/src/Routes/FundingDetail/FundingDetailContainer.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport FundingDetailPresenter from \"./FundingDetailPresenter\";\nimport { cav } from \"Caver/caver\"; // import Caver from \"caver-js\";\n\nconst Container = styled.div``;\n\nconst Caver = require(\"caver-js\");\n\nconst caver = new Caver(\"https://api.baobab.klaytn.net:8651/\");\n\nconst FundingDetailContainer = () => {\n  const abi = [{\n    constant: false,\n    inputs: [{\n      name: \"_value\",\n      type: \"uint256\"\n    }],\n    name: \"deposit\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  }, {\n    constant: false,\n    inputs: [],\n    name: \"getRefund\",\n    outputs: [{\n      name: \"\",\n      type: \"bool\"\n    }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [{\n      name: \"\",\n      type: \"address\"\n    }],\n    name: \"contributions\",\n    outputs: [{\n      name: \"\",\n      type: \"uint256\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"creator\",\n    outputs: [{\n      name: \"\",\n      type: \"address\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"currentBalance\",\n    outputs: [{\n      name: \"\",\n      type: \"uint256\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"state\",\n    outputs: [{\n      name: \"\",\n      type: \"uint8\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }]; //컨트랙트 주소.\n\n  const contractAddress = \"0x12f3F9263f8Da2a7ac078C67a823Be9f4e2FCE44\";\n  const [visible, setVisible] = useState(false);\n  const [privkey, setPrivkey] = useState(\"\");\n\n  const handleKey = e => {\n    setPrivkey(e.target.value);\n  }; //0x8d7b30525c2c85ec1c78850d0fc96a524aaaa2a0e183f2f14c938b626e9f2cfc\n  //0xd537ff4b3d5f6e79daa9312cc550c3b0c9e55c5de38188a368d4c947a56f5370\n\n\n  const handleOkandCancel = async e => {\n    e.preventDefault();\n    setVisible(false); // try {\n    //     const kip7Instance = new caver.kct.kip7(contractAddress);\n    //     console.log(kip7Instance);\n    //     const keyring = caver.wallet.keyring.createFromPrivateKey(privkey);\n    //     caver.wallet.add(keyring);\n    //     const to = \"0x12f3F9263f8Da2a7ac078C67a823Be9f4e2FCE44\";\n    //     const value = 10;\n    //     kip7Instance.options.from = keyring.address;\n    //     const receipt = await kip7Instance.transfer(to, value);\n    //     console.log(receipt);\n    // } catch (e) {\n    //     console.log(e);\n    // }\n\n    const amount = 2;\n    const walletInstance = cav.kct.accounts.privateKeyToAccount(privkey);\n    cav.kct.accounts.wallet.add(walletInstance);\n    const contractInstance = new cav.contract(abi, Address);\n    console.log(walletInstance, contractInstance);\n    const txObject = {\n      from: walletInstance.address,\n      to: contractAddress,\n      value: cav.utils.toPeb(amount, \"KLAY\"),\n      gas: 50000\n    };\n    const senderSigned = await caver.klay.accounts.signTransaction(txObject);\n    const receipt = await caver.klay.sendSignedTransaction(senderSigned.rawTransaction);\n    console.log(receipt); // try {\n    //     contractInstance.methods\n    //         .deposit(amount)\n    //         .send({\n    //             from: inst.address,\n    //             gas: \"250000\",\n    //             value: cav.utils.toPeb(amount, \"KLAY\"),\n    //         })\n    //         .once(\"transactionHash\", (txHash) => {\n    //             console.log(`\n    //                     Sending a transaction... (Call contract's function 'minus')\n    //                     txHash: ${txHash}\n    //                   `);\n    //         })\n    //         .once(\"receipt\", (receipt) => {\n    //             console.log(\n    //                 `\n    //                   Received receipt which means your transaction(calling minus function)\n    //                   is in klaytn block(#${receipt.blockNumber})\n    //                 `,\n    //                 receipt\n    //             );\n    //         })\n    //         .once(\"error\", (error) => {\n    //             alert(error.message);\n    //         });\n    // } catch (e) {\n    //     console.log(e);\n    // }\n  };\n\n  const handleFunding = e => {\n    setVisible(true);\n  };\n\n  const handleCancel = e => {};\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FundingDetailPresenter, {\n    visible: visible,\n    privkey: privkey,\n    handleFunding: handleFunding,\n    handleCancel: handleCancel,\n    handleOkandCancel: handleOkandCancel,\n    handleKey: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default FundingDetailContainer;","map":{"version":3,"sources":["/Users/heeje/Desktop/Projcet_A/Front_End/react-dapp/client/src/Routes/FundingDetail/FundingDetailContainer.js"],"names":["React","useState","styled","FundingDetailPresenter","cav","Container","div","Caver","require","caver","FundingDetailContainer","abi","constant","inputs","name","type","outputs","payable","stateMutability","contractAddress","visible","setVisible","privkey","setPrivkey","handleKey","e","target","value","handleOkandCancel","preventDefault","amount","walletInstance","kct","accounts","privateKeyToAccount","wallet","add","contractInstance","contract","Address","console","log","txObject","from","address","to","utils","toPeb","gas","senderSigned","klay","signTransaction","receipt","sendSignedTransaction","rawTransaction","handleFunding","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport FundingDetailPresenter from \"./FundingDetailPresenter\";\nimport { cav } from \"Caver/caver\";\n// import Caver from \"caver-js\";\n\nconst Container = styled.div``;\n\nconst Caver = require(\"caver-js\");\nconst caver = new Caver(\"https://api.baobab.klaytn.net:8651/\");\n\nconst FundingDetailContainer = () => {\n    const abi = [\n        {\n            constant: false,\n            inputs: [\n                {\n                    name: \"_value\",\n                    type: \"uint256\",\n                },\n            ],\n            name: \"deposit\",\n            outputs: [],\n            payable: true,\n            stateMutability: \"payable\",\n            type: \"function\",\n        },\n        {\n            constant: false,\n            inputs: [],\n            name: \"getRefund\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"bool\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"nonpayable\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [\n                {\n                    name: \"\",\n                    type: \"address\",\n                },\n            ],\n            name: \"contributions\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"uint256\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: \"creator\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"address\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: \"currentBalance\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"uint256\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: \"state\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"uint8\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n    ];\n\n    //컨트랙트 주소.\n    const contractAddress = \"0x12f3F9263f8Da2a7ac078C67a823Be9f4e2FCE44\";\n    const [visible, setVisible] = useState(false);\n    const [privkey, setPrivkey] = useState(\"\");\n\n    const handleKey = (e) => {\n        setPrivkey(e.target.value);\n    };\n\n    //0x8d7b30525c2c85ec1c78850d0fc96a524aaaa2a0e183f2f14c938b626e9f2cfc\n    //0xd537ff4b3d5f6e79daa9312cc550c3b0c9e55c5de38188a368d4c947a56f5370\n    const handleOkandCancel = async (e) => {\n        e.preventDefault();\n        setVisible(false);\n\n        // try {\n        //     const kip7Instance = new caver.kct.kip7(contractAddress);\n        //     console.log(kip7Instance);\n        //     const keyring = caver.wallet.keyring.createFromPrivateKey(privkey);\n        //     caver.wallet.add(keyring);\n        //     const to = \"0x12f3F9263f8Da2a7ac078C67a823Be9f4e2FCE44\";\n        //     const value = 10;\n        //     kip7Instance.options.from = keyring.address;\n        //     const receipt = await kip7Instance.transfer(to, value);\n        //     console.log(receipt);\n        // } catch (e) {\n        //     console.log(e);\n        // }\n        const amount = 2;\n        const walletInstance = cav.kct.accounts.privateKeyToAccount(privkey);\n        cav.kct.accounts.wallet.add(walletInstance);\n\n        const contractInstance = new cav.contract(abi, Address);\n        console.log(walletInstance, contractInstance);\n        const txObject = {\n            from: walletInstance.address,\n            to: contractAddress,\n            value: cav.utils.toPeb(amount, \"KLAY\"),\n            gas: 50000,\n        };\n        const senderSigned = await caver.klay.accounts.signTransaction(\n            txObject\n        );\n\n        const receipt = await caver.klay.sendSignedTransaction(\n            senderSigned.rawTransaction\n        );\n\n        console.log(receipt);\n\n        // try {\n        //     contractInstance.methods\n        //         .deposit(amount)\n        //         .send({\n        //             from: inst.address,\n        //             gas: \"250000\",\n        //             value: cav.utils.toPeb(amount, \"KLAY\"),\n        //         })\n        //         .once(\"transactionHash\", (txHash) => {\n        //             console.log(`\n        //                     Sending a transaction... (Call contract's function 'minus')\n        //                     txHash: ${txHash}\n        //                   `);\n        //         })\n        //         .once(\"receipt\", (receipt) => {\n        //             console.log(\n        //                 `\n        //                   Received receipt which means your transaction(calling minus function)\n        //                   is in klaytn block(#${receipt.blockNumber})\n        //                 `,\n        //                 receipt\n        //             );\n        //         })\n        //         .once(\"error\", (error) => {\n        //             alert(error.message);\n        //         });\n        // } catch (e) {\n        //     console.log(e);\n        // }\n    };\n\n    const handleFunding = (e) => {\n        setVisible(true);\n    };\n\n    const handleCancel = (e) => {};\n\n    return (\n        <Container>\n            <FundingDetailPresenter\n                visible={visible}\n                privkey={privkey}\n                handleFunding={handleFunding}\n                handleCancel={handleCancel}\n                handleOkandCancel={handleOkandCancel}\n                handleKey={handleKey}\n            ></FundingDetailPresenter>\n        </Container>\n    );\n};\n\nexport default FundingDetailContainer;\n"]},"metadata":{},"sourceType":"module"}