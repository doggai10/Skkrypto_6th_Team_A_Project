{"ast":null,"code":"var _jsxFileName = \"/Users/heeje/Desktop/Projcet_A/Front_End/react-dapp/client/src/Routes/FundingDetail/FundingDetailContainer.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport FundingDetailPresenter from \"./FundingDetailPresenter\";\nimport { cav } from \"Caver/caver\";\nimport Caver from \"caver-js\";\nconst Container = styled.div``;\n\nconst getWallet = () => {\n  if (cav.klay.accounts.wallet.length > 0) {\n    return cav.klay.accounts.wallet[0];\n  }\n};\n\nconst FundingDetailContainer = () => {\n  const abi = [{\n    constant: false,\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  }, {\n    constant: false,\n    inputs: [],\n    name: \"getRefund\",\n    outputs: [{\n      name: \"\",\n      type: \"bool\"\n    }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [{\n      name: \"\",\n      type: \"address\"\n    }],\n    name: \"contributions\",\n    outputs: [{\n      name: \"\",\n      type: \"uint256\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"creator\",\n    outputs: [{\n      name: \"\",\n      type: \"address\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"currentBalance\",\n    outputs: [{\n      name: \"\",\n      type: \"uint256\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"state\",\n    outputs: [{\n      name: \"\",\n      type: \"uint8\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }]; //컨트랙트 주소.\n\n  const Address = \"0xe319b2442e0c05f543c4d15528e26a7fd9894ac3\";\n  const [visible, setVisible] = useState(false);\n  const [privkey, setPrivkey] = useState(\"\");\n\n  const handleKey = e => {\n    setPrivkey(e.target.value);\n  }; //0x8d7b30525c2c85ec1c78850d0fc96a524aaaa2a0e183f2f14c938b626e9f2cfc\n\n\n  const handleOkandCancel = async e => {\n    e.preventDefault();\n    setVisible(false);\n    const walletInstance = caver.wallet.keyring.createFromPrivateKey(privkey);\n    cav.klay.accounts.wallet.add(walletInstance);\n    const contractInstance = new cav.contract(abi, Address);\n    const tx = new cav.transaction.valueTransfer({\n      from: walletInstance.address,\n      to: Address,\n      gas: \"250000\",\n      value: cav.utils.toPeb(2, \"KLAY\")\n    });\n    await cav.wallet.sign(walletInstance.address, tx);\n    const rlpEncoded = tx.getRLPEncoding();\n    console.log(`RLP-encoded string: ${rlpEncoded}`); // if (walletInstance) {\n    //     try {\n    //         contractInstance.methods.deposit().send({\n    //             from: walletInstance.address,\n    //             gas: \"250000\",\n    //             value: cav.utils.toPeb(2, \"KLAY\"),\n    //         });\n    //     } catch {}\n    // }\n  };\n\n  const handleFunding = e => {\n    setVisible(true);\n  };\n\n  const handleCancel = e => {};\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FundingDetailPresenter, {\n    visible: visible,\n    privkey: privkey,\n    handleFunding: handleFunding,\n    handleCancel: handleCancel,\n    handleOkandCancel: handleOkandCancel,\n    handleKey: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default FundingDetailContainer;","map":{"version":3,"sources":["/Users/heeje/Desktop/Projcet_A/Front_End/react-dapp/client/src/Routes/FundingDetail/FundingDetailContainer.js"],"names":["React","useState","styled","FundingDetailPresenter","cav","Caver","Container","div","getWallet","klay","accounts","wallet","length","FundingDetailContainer","abi","constant","inputs","name","outputs","payable","stateMutability","type","Address","visible","setVisible","privkey","setPrivkey","handleKey","e","target","value","handleOkandCancel","preventDefault","walletInstance","caver","keyring","createFromPrivateKey","add","contractInstance","contract","tx","transaction","valueTransfer","from","address","to","gas","utils","toPeb","sign","rlpEncoded","getRLPEncoding","console","log","handleFunding","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport FundingDetailPresenter from \"./FundingDetailPresenter\";\nimport { cav } from \"Caver/caver\";\nimport Caver from \"caver-js\";\n\nconst Container = styled.div``;\n\nconst getWallet = () => {\n    if (cav.klay.accounts.wallet.length > 0) {\n        return cav.klay.accounts.wallet[0];\n    }\n};\n\nconst FundingDetailContainer = () => {\n    const abi = [\n        {\n            constant: false,\n            inputs: [],\n            name: \"deposit\",\n            outputs: [],\n            payable: true,\n            stateMutability: \"payable\",\n            type: \"function\",\n        },\n        {\n            constant: false,\n            inputs: [],\n            name: \"getRefund\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"bool\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"nonpayable\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [\n                {\n                    name: \"\",\n                    type: \"address\",\n                },\n            ],\n            name: \"contributions\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"uint256\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: \"creator\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"address\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: \"currentBalance\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"uint256\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n        {\n            constant: true,\n            inputs: [],\n            name: \"state\",\n            outputs: [\n                {\n                    name: \"\",\n                    type: \"uint8\",\n                },\n            ],\n            payable: false,\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n    ];\n\n    //컨트랙트 주소.\n    const Address = \"0xe319b2442e0c05f543c4d15528e26a7fd9894ac3\";\n    const [visible, setVisible] = useState(false);\n    const [privkey, setPrivkey] = useState(\"\");\n\n    const handleKey = (e) => {\n        setPrivkey(e.target.value);\n    };\n\n    //0x8d7b30525c2c85ec1c78850d0fc96a524aaaa2a0e183f2f14c938b626e9f2cfc\n\n    const handleOkandCancel = async (e) => {\n        e.preventDefault();\n        setVisible(false);\n\n        const walletInstance = caver.wallet.keyring.createFromPrivateKey(\n            privkey\n        );\n        cav.klay.accounts.wallet.add(walletInstance);\n\n        const contractInstance = new cav.contract(abi, Address);\n\n        const tx = new cav.transaction.valueTransfer({\n            from: walletInstance.address,\n            to: Address,\n            gas: \"250000\",\n            value: cav.utils.toPeb(2, \"KLAY\"),\n        });\n\n        await cav.wallet.sign(walletInstance.address, tx);\n\n        const rlpEncoded = tx.getRLPEncoding();\n        console.log(`RLP-encoded string: ${rlpEncoded}`);\n\n        // if (walletInstance) {\n        //     try {\n        //         contractInstance.methods.deposit().send({\n        //             from: walletInstance.address,\n        //             gas: \"250000\",\n        //             value: cav.utils.toPeb(2, \"KLAY\"),\n        //         });\n        //     } catch {}\n        // }\n    };\n\n    const handleFunding = (e) => {\n        setVisible(true);\n    };\n\n    const handleCancel = (e) => {};\n\n    return (\n        <Container>\n            <FundingDetailPresenter\n                visible={visible}\n                privkey={privkey}\n                handleFunding={handleFunding}\n                handleCancel={handleCancel}\n                handleOkandCancel={handleOkandCancel}\n                handleKey={handleKey}\n            ></FundingDetailPresenter>\n        </Container>\n    );\n};\n\nexport default FundingDetailContainer;\n"]},"metadata":{},"sourceType":"module"}