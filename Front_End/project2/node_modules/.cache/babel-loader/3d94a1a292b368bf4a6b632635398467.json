{"ast":null,"code":"var _jsxFileName = \"/Users/heeje/Desktop/Projcet_A/Front_End/react-dapp/client/src/Routes/SignUp/SignUpContainer.js\";\nimport React, { useState } from \"react\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { cav } from \"Caver/caver\";\nimport { signatureData } from \"caver-js/packages/caver-wallet/src/keyring/keyringFactory\";\nconst Container = styled.div`\n    display: flex;\n`;\nconst Error = styled.div`\n    color: red;\n    opacity: 0.7;\n`;\n\nconst SignUpContainer = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setCofirm] = useState(\"\");\n  const [key, setKeyring] = useState(null);\n  const [privKey, setPriv] = useState(null);\n  const history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const SignData = {\n      name,\n      email,\n      password,\n      key\n    };\n    console.log(SignData);\n\n    try {\n      const res = await axios.post(\"/sign-up\", SignData);\n      alert(`저장 성공!\\n 당신의 개인키는 ${privKey} 입니다.`);\n    } catch (e) {\n      console.log(e);\n    }\n\n    history.push(\"/\");\n  };\n\n  const getKeyring = async () => {\n    const keyring = await cav.wallet.keyring.generate();\n    setKeyring(keyring.address);\n    setPriv(keyring.key);\n  };\n\n  const doesPasswordMatch = () => {\n    return password === confirm;\n  };\n\n  const renderFeedbackMessage = () => {\n    if (confirm) {\n      if (!doesPasswordMatch()) {\n        return /*#__PURE__*/React.createElement(Error, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 24\n          }\n        }, \"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\");\n      }\n    }\n  };\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleConfirmPassword = e => {\n    setCofirm(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SignUpPresenter, {\n    name: name,\n    email: email,\n    password: password,\n    cofirm: confirm,\n    handleName: handleName,\n    handleEmail: handleEmail,\n    handlePassword: handlePassword,\n    handleConfirmPassword: handleConfirmPassword,\n    handleSubmit: handleSubmit,\n    renderFeedbackMessage: renderFeedbackMessage,\n    doesPasswordMatch: doesPasswordMatch,\n    getKeyring: getKeyring,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SignUpContainer;","map":{"version":3,"sources":["/Users/heeje/Desktop/Projcet_A/Front_End/react-dapp/client/src/Routes/SignUp/SignUpContainer.js"],"names":["React","useState","SignUpPresenter","axios","useHistory","styled","cav","signatureData","Container","div","Error","SignUpContainer","name","setName","email","setEmail","password","setPassword","confirm","setCofirm","key","setKeyring","privKey","setPriv","history","handleSubmit","e","preventDefault","SignData","console","log","res","post","alert","push","getKeyring","keyring","wallet","generate","address","doesPasswordMatch","renderFeedbackMessage","handleName","target","value","handleEmail","handlePassword","handleConfirmPassword"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { cav } from \"Caver/caver\";\nimport { signatureData } from \"caver-js/packages/caver-wallet/src/keyring/keyringFactory\";\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Error = styled.div`\n    color: red;\n    opacity: 0.7;\n`;\nconst SignUpContainer = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirm, setCofirm] = useState(\"\");\n    const [key, setKeyring] = useState(null);\n    const [privKey, setPriv] = useState(null);\n\n    const history = useHistory();\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const SignData = { name, email, password, key };\n        console.log(SignData);\n\n        try {\n            const res = await axios.post(\"/sign-up\", SignData);\n            alert(`저장 성공!\\n 당신의 개인키는 ${privKey} 입니다.`);\n        } catch (e) {\n            console.log(e);\n        }\n        history.push(\"/\");\n    };\n\n    const getKeyring = async () => {\n        const keyring = await cav.wallet.keyring.generate();\n        setKeyring(keyring.address);\n        setPriv(keyring.key);\n    };\n    const doesPasswordMatch = () => {\n        return password === confirm;\n    };\n    const renderFeedbackMessage = () => {\n        if (confirm) {\n            if (!doesPasswordMatch()) {\n                return <Error>패스워드가 일치하지 않습니다.</Error>;\n            }\n        }\n    };\n    const handleName = (e) => {\n        setName(e.target.value);\n    };\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n    };\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const handleConfirmPassword = (e) => {\n        setCofirm(e.target.value);\n    };\n\n    return (\n        <Container>\n            <SignUpPresenter\n                name={name}\n                email={email}\n                password={password}\n                cofirm={confirm}\n                handleName={handleName}\n                handleEmail={handleEmail}\n                handlePassword={handlePassword}\n                handleConfirmPassword={handleConfirmPassword}\n                handleSubmit={handleSubmit}\n                renderFeedbackMessage={renderFeedbackMessage}\n                doesPasswordMatch={doesPasswordMatch}\n                getKeyring={getKeyring}\n            ></SignUpPresenter>\n        </Container>\n    );\n};\n\nexport default SignUpContainer;\n"]},"metadata":{},"sourceType":"module"}