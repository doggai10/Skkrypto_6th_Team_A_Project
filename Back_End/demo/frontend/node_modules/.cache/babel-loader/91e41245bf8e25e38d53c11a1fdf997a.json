{"ast":null,"code":"var _classCallCheck = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar _require = require('../transactionHelper/transactionHelper'),\n    TX_TYPE_STRING = _require.TX_TYPE_STRING,\n    typeDetectionFromRLPEncoding = _require.typeDetectionFromRLPEncoding;\n\nvar LegacyTransaction = require('../transactionTypes/legacyTransaction/legacyTransaction');\n\nvar ValueTransfer = require('../transactionTypes/valueTransfer/valueTransfer');\n\nvar FeeDelegatedValueTransfer = require('../transactionTypes/valueTransfer/feeDelegatedValueTransfer');\n\nvar FeeDelegatedValueTransferWithRatio = require('../transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio');\n\nvar ValueTransferMemo = require('../transactionTypes/valueTransferMemo/valueTransferMemo');\n\nvar FeeDelegatedValueTransferMemo = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo');\n\nvar FeeDelegatedValueTransferMemoWithRatio = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio');\n\nvar AccountUpdate = require('../transactionTypes/accountUpdate/accountUpdate');\n\nvar FeeDelegatedAccountUpdate = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdate');\n\nvar FeeDelegatedAccountUpdateWithRatio = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio');\n\nvar SmartContractDeploy = require('../transactionTypes/smartContractDeploy/smartContractDeploy');\n\nvar FeeDelegatedSmartContractDeploy = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy');\n\nvar FeeDelegatedSmartContractDeployWithRatio = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio');\n\nvar SmartContractExecution = require('../transactionTypes/smartContractExecution/smartContractExecution');\n\nvar FeeDelegatedSmartContractExecution = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution');\n\nvar FeeDelegatedSmartContractExecutionWithRatio = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio');\n\nvar Cancel = require('../transactionTypes/cancel/cancel');\n\nvar FeeDelegatedCancel = require('../transactionTypes/cancel/feeDelegatedCancel');\n\nvar FeeDelegatedCancelWithRatio = require('../transactionTypes/cancel/feeDelegatedCancelWithRatio');\n\nvar ChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/chainDataAnchoring');\n\nvar FeeDelegatedChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring');\n\nvar FeeDelegatedChainDataAnchoringWithRatio = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio');\n/**\n * Representing a transaction decoder.\n * @class\n */\n\n\nvar TransactionDecoder = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function TransactionDecoder() {\n    _classCallCheck(this, TransactionDecoder);\n  }\n\n  _createClass(TransactionDecoder, null, [{\n    key: \"decode\",\n\n    /**\n     * Decodes RLP-encoded transaction string and returns a Transaction instance.\n     * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\n     * @return {Transaction}\n     */\n    value: function decode(rlpEncoded) {\n      var type = typeDetectionFromRLPEncoding(rlpEncoded);\n\n      switch (type) {\n        case TX_TYPE_STRING.TxTypeLegacyTransaction:\n          return LegacyTransaction.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeValueTransfer:\n          return ValueTransfer.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n          return FeeDelegatedValueTransfer.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n          return FeeDelegatedValueTransferWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeValueTransferMemo:\n          return ValueTransferMemo.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n          return FeeDelegatedValueTransferMemo.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n          return FeeDelegatedValueTransferMemoWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeAccountUpdate:\n          return AccountUpdate.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n          return FeeDelegatedAccountUpdate.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n          return FeeDelegatedAccountUpdateWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n          return SmartContractDeploy.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n          return FeeDelegatedSmartContractDeploy.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n          return FeeDelegatedSmartContractDeployWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeSmartContractExecution:\n          return SmartContractExecution.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n          return FeeDelegatedSmartContractExecution.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n          return FeeDelegatedSmartContractExecutionWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeCancel:\n          return Cancel.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n          return FeeDelegatedCancel.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n          return FeeDelegatedCancelWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n          return ChainDataAnchoring.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n          return FeeDelegatedChainDataAnchoring.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n          return FeeDelegatedChainDataAnchoringWithRatio.decode(rlpEncoded);\n      }\n    }\n  }]);\n\n  return TransactionDecoder;\n}();\n\nmodule.exports = TransactionDecoder;","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/caver-js/packages/caver-transaction/src/transactionDecoder/transactionDecoder.js"],"names":["require","TX_TYPE_STRING","typeDetectionFromRLPEncoding","LegacyTransaction","ValueTransfer","FeeDelegatedValueTransfer","FeeDelegatedValueTransferWithRatio","ValueTransferMemo","FeeDelegatedValueTransferMemo","FeeDelegatedValueTransferMemoWithRatio","AccountUpdate","FeeDelegatedAccountUpdate","FeeDelegatedAccountUpdateWithRatio","SmartContractDeploy","FeeDelegatedSmartContractDeploy","FeeDelegatedSmartContractDeployWithRatio","SmartContractExecution","FeeDelegatedSmartContractExecution","FeeDelegatedSmartContractExecutionWithRatio","Cancel","FeeDelegatedCancel","FeeDelegatedCancelWithRatio","ChainDataAnchoring","FeeDelegatedChainDataAnchoring","FeeDelegatedChainDataAnchoringWithRatio","TransactionDecoder","rlpEncoded","type","TxTypeLegacyTransaction","decode","TxTypeValueTransfer","TxTypeFeeDelegatedValueTransfer","TxTypeFeeDelegatedValueTransferWithRatio","TxTypeValueTransferMemo","TxTypeFeeDelegatedValueTransferMemo","TxTypeFeeDelegatedValueTransferMemoWithRatio","TxTypeAccountUpdate","TxTypeFeeDelegatedAccountUpdate","TxTypeFeeDelegatedAccountUpdateWithRatio","TxTypeSmartContractDeploy","TxTypeFeeDelegatedSmartContractDeploy","TxTypeFeeDelegatedSmartContractDeployWithRatio","TxTypeSmartContractExecution","TxTypeFeeDelegatedSmartContractExecution","TxTypeFeeDelegatedSmartContractExecutionWithRatio","TxTypeCancel","TxTypeFeeDelegatedCancel","TxTypeFeeDelegatedCancelWithRatio","TxTypeChainDataAnchoring","TxTypeFeeDelegatedChainDataAnchoring","TxTypeFeeDelegatedChainDataAnchoringWithRatio","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst { TX_TYPE_STRING, typeDetectionFromRLPEncoding } = require('../transactionHelper/transactionHelper')\nconst LegacyTransaction = require('../transactionTypes/legacyTransaction/legacyTransaction')\nconst ValueTransfer = require('../transactionTypes/valueTransfer/valueTransfer')\nconst FeeDelegatedValueTransfer = require('../transactionTypes/valueTransfer/feeDelegatedValueTransfer')\nconst FeeDelegatedValueTransferWithRatio = require('../transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio')\nconst ValueTransferMemo = require('../transactionTypes/valueTransferMemo/valueTransferMemo')\nconst FeeDelegatedValueTransferMemo = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo')\nconst FeeDelegatedValueTransferMemoWithRatio = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio')\nconst AccountUpdate = require('../transactionTypes/accountUpdate/accountUpdate')\nconst FeeDelegatedAccountUpdate = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdate')\nconst FeeDelegatedAccountUpdateWithRatio = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio')\nconst SmartContractDeploy = require('../transactionTypes/smartContractDeploy/smartContractDeploy')\nconst FeeDelegatedSmartContractDeploy = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy')\nconst FeeDelegatedSmartContractDeployWithRatio = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio')\nconst SmartContractExecution = require('../transactionTypes/smartContractExecution/smartContractExecution')\nconst FeeDelegatedSmartContractExecution = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution')\nconst FeeDelegatedSmartContractExecutionWithRatio = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio')\nconst Cancel = require('../transactionTypes/cancel/cancel')\nconst FeeDelegatedCancel = require('../transactionTypes/cancel/feeDelegatedCancel')\nconst FeeDelegatedCancelWithRatio = require('../transactionTypes/cancel/feeDelegatedCancelWithRatio')\nconst ChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/chainDataAnchoring')\nconst FeeDelegatedChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring')\nconst FeeDelegatedChainDataAnchoringWithRatio = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio')\n\n/**\n * Representing a transaction decoder.\n * @class\n */\nclass TransactionDecoder {\n    /**\n     * Decodes RLP-encoded transaction string and returns a Transaction instance.\n     * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\n     * @return {Transaction}\n     */\n    static decode(rlpEncoded) {\n        const type = typeDetectionFromRLPEncoding(rlpEncoded)\n\n        switch (type) {\n            case TX_TYPE_STRING.TxTypeLegacyTransaction:\n                return LegacyTransaction.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeValueTransfer:\n                return ValueTransfer.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n                return FeeDelegatedValueTransfer.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n                return FeeDelegatedValueTransferWithRatio.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeValueTransferMemo:\n                return ValueTransferMemo.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n                return FeeDelegatedValueTransferMemo.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n                return FeeDelegatedValueTransferMemoWithRatio.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeAccountUpdate:\n                return AccountUpdate.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n                return FeeDelegatedAccountUpdate.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n                return FeeDelegatedAccountUpdateWithRatio.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n                return SmartContractDeploy.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n                return FeeDelegatedSmartContractDeploy.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n                return FeeDelegatedSmartContractDeployWithRatio.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeSmartContractExecution:\n                return SmartContractExecution.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n                return FeeDelegatedSmartContractExecution.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n                return FeeDelegatedSmartContractExecutionWithRatio.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeCancel:\n                return Cancel.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n                return FeeDelegatedCancel.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n                return FeeDelegatedCancelWithRatio.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n                return ChainDataAnchoring.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n                return FeeDelegatedChainDataAnchoring.decode(rlpEncoded)\n            case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n                return FeeDelegatedChainDataAnchoringWithRatio.decode(rlpEncoded)\n        }\n    }\n}\n\nmodule.exports = TransactionDecoder\n"]},"metadata":{},"sourceType":"script"}