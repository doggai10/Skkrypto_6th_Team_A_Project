{"ast":null,"code":"var _slicedToArray = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\n/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar RLP = require('eth-lib/lib/rlp');\n\nvar Bytes = require('eth-lib/lib/bytes');\n\nvar utils = require('../../../../caver-utils');\n\nvar helpers = require('../../../../caver-core-helpers');\n\nvar _helpers$constants = helpers.constants,\n    CANCEL_TYPE_TAG = _helpers$constants.CANCEL_TYPE_TAG,\n    FEE_DELEGATED_CANCEL_TYPE_TAG = _helpers$constants.FEE_DELEGATED_CANCEL_TYPE_TAG,\n    FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG = _helpers$constants.FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG;\n\nfunction rlpEncodeForCancel(transaction) {\n  return RLP.encode([RLP.encode([CANCEL_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase()]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedCancel(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode2 = _slicedToArray(_utils$rlpDecode, 5),\n        nonce = _utils$rlpDecode2[0],\n        gasPrice = _utils$rlpDecode2[1],\n        gas = _utils$rlpDecode2[2],\n        from = _utils$rlpDecode2[3],\n        _utils$rlpDecode2$ = _slicedToArray(_utils$rlpDecode2[4], 1),\n        _utils$rlpDecode2$$ = _slicedToArray(_utils$rlpDecode2$[0], 3),\n        v = _utils$rlpDecode2$$[0],\n        r = _utils$rlpDecode2$$[1],\n        s = _utils$rlpDecode2$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), from.toLowerCase()]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase()]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedCancelWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode3 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode4 = _slicedToArray(_utils$rlpDecode3, 6),\n        nonce = _utils$rlpDecode4[0],\n        gasPrice = _utils$rlpDecode4[1],\n        gas = _utils$rlpDecode4[2],\n        from = _utils$rlpDecode4[3],\n        feeRatio = _utils$rlpDecode4[4],\n        _utils$rlpDecode4$ = _slicedToArray(_utils$rlpDecode4[5], 1),\n        _utils$rlpDecode4$$ = _slicedToArray(_utils$rlpDecode4$[0], 3),\n        v = _utils$rlpDecode4$$[0],\n        r = _utils$rlpDecode4$$[1],\n        s = _utils$rlpDecode4$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), from.toLowerCase(), Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase(), Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForCancel: rlpEncodeForCancel,\n  rlpEncodeForFeeDelegatedCancel: rlpEncodeForFeeDelegatedCancel,\n  rlpEncodeForFeeDelegatedCancelWithRatio: rlpEncodeForFeeDelegatedCancelWithRatio\n};","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/cancel.js"],"names":["RLP","require","Bytes","utils","helpers","constants","CANCEL_TYPE_TAG","FEE_DELEGATED_CANCEL_TYPE_TAG","FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG","rlpEncodeForCancel","transaction","encode","fromNat","nonce","gasPrice","gas","from","toLowerCase","chainId","rlpEncodeForFeeDelegatedCancel","senderRawTransaction","typeDetacehdRawTransaction","slice","rlpDecode","v","r","s","feePayer","rlpEncodeForFeeDelegatedCancelWithRatio","feeRatio","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RLP = require('eth-lib/lib/rlp')\nconst Bytes = require('eth-lib/lib/bytes')\nconst utils = require('../../../../caver-utils')\nconst helpers = require('../../../../caver-core-helpers')\n\nconst { CANCEL_TYPE_TAG, FEE_DELEGATED_CANCEL_TYPE_TAG, FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG } = helpers.constants\n\nfunction rlpEncodeForCancel(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            CANCEL_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedCancel(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, from, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_CANCEL_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                from.toLowerCase(),\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_CANCEL_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedCancelWithRatio(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, from, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                from.toLowerCase(),\n                Bytes.fromNat(feeRatio),\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n            Bytes.fromNat(transaction.feeRatio),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nmodule.exports = {\n    rlpEncodeForCancel,\n    rlpEncodeForFeeDelegatedCancel,\n    rlpEncodeForFeeDelegatedCancelWithRatio,\n}\n"]},"metadata":{},"sourceType":"script"}