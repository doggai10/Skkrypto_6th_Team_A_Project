{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/src/Routes/SignUp/SignUpContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n    display: flex;\n`;\n_c = Container;\nconst Error = styled.div`\n    color: red;\n    opacity: 0.7;\n`;\n_c2 = Error;\n\nconst SignUpContainer = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // const [privatKey, setpKey] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setCofirm] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const SignData = {\n      name,\n      email,\n      password,\n      confirm\n    };\n\n    try {\n      const res = await axios.post(\"/sign-up\", SignData);\n      alert(\"저장 성공!\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const doesPasswordMatch = () => {\n    return password === confirm;\n  };\n\n  const renderFeedbackMessage = () => {\n    if (confirm) {\n      if (!doesPasswordMatch()) {\n        return /*#__PURE__*/_jsxDEV(Error, {\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  };\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  }; // const handlepKey = (e) => {\n  //     setpKey(e.target.value);\n  // };\n\n\n  const handlePassword = e => {\n    // console.log(e.target.value);\n    setPassword(e.target.value);\n  };\n\n  const handleConfirmPassword = e => {\n    // console.log(e.target.value);\n    setCofirm(e.target.value);\n  };\n\n  console.log(renderFeedbackMessage());\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SignUpPresenter, {\n      name: name,\n      email: email,\n      password: password,\n      cofirm: confirm,\n      handleName: handleName,\n      handleEmail: handleEmail,\n      handlePassword: handlePassword,\n      handleConfirmPassword: handleConfirmPassword,\n      handleSubmit: handleSubmit,\n      renderFeedbackMessage: renderFeedbackMessage,\n      doesPasswordMatch: doesPasswordMatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpContainer, \"mzTrH3nMcBayyqq1mwKtj6E7eVw=\");\n\n_c3 = SignUpContainer;\nexport default SignUpContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Error\");\n$RefreshReg$(_c3, \"SignUpContainer\");","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/src/Routes/SignUp/SignUpContainer.js"],"names":["React","useState","SignUpPresenter","axios","styled","Container","div","Error","SignUpContainer","name","setName","email","setEmail","password","setPassword","confirm","setCofirm","handleSubmit","e","preventDefault","SignData","res","post","alert","console","log","doesPasswordMatch","renderFeedbackMessage","handleName","target","value","handleEmail","handlePassword","handleConfirmPassword"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Error = styled.div`\n    color: red;\n    opacity: 0.7;\n`;\nconst SignUpContainer = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    // const [privatKey, setpKey] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirm, setCofirm] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const SignData = { name, email, password, confirm };\n\n        try {\n            const res = await axios.post(\"/sign-up\", SignData);\n            alert(\"저장 성공!\");\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const doesPasswordMatch = () => {\n        return password === confirm;\n    };\n    const renderFeedbackMessage = () => {\n        if (confirm) {\n            if (!doesPasswordMatch()) {\n                return <Error>패스워드가 일치하지 않습니다.</Error>;\n            }\n        }\n    };\n    const handleName = (e) => {\n        setName(e.target.value);\n    };\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n    };\n\n    // const handlepKey = (e) => {\n    //     setpKey(e.target.value);\n    // };\n\n    const handlePassword = (e) => {\n        // console.log(e.target.value);\n        setPassword(e.target.value);\n    };\n\n    const handleConfirmPassword = (e) => {\n        // console.log(e.target.value);\n        setCofirm(e.target.value);\n    };\n    console.log(renderFeedbackMessage());\n    return (\n        <Container>\n            <SignUpPresenter\n                name={name}\n                email={email}\n                password={password}\n                cofirm={confirm}\n                handleName={handleName}\n                handleEmail={handleEmail}\n                handlePassword={handlePassword}\n                handleConfirmPassword={handleConfirmPassword}\n                handleSubmit={handleSubmit}\n                renderFeedbackMessage={renderFeedbackMessage}\n                doesPasswordMatch={doesPasswordMatch}\n            ></SignUpPresenter>\n        </Container>\n    );\n};\n\nexport default SignUpContainer;\n"]},"metadata":{},"sourceType":"module"}