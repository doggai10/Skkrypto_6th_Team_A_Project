{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _require = require('../../caver-core-requestmanager'),\n    Manager = _require.Manager,\n    BatchManager = _require.BatchManager;\n\nvar formatters = require('../../caver-core-helpers').formatters;\n\nvar Method = require('../../caver-core-method');\n\nvar utils = require('../../caver-utils'); // TODO : clarify what extend do\n// eslint-disable-next-line no-unused-vars\n\n\nvar extend = function extend(pkg) {\n  var ex = function ex(extension) {\n    var extendedObject = pkg;\n\n    if (extension.property) {\n      extendedObject = pkg[extension.property] = pkg[extension.property] || {};\n    }\n\n    if (extension.methods) {\n      extension.methods.forEach(function (method) {\n        if (!(method instanceof Method)) {\n          method = new Method(method);\n        }\n\n        method.attachToObject(extendedObject);\n        method.setRequestManager(pkg._requestManager);\n      });\n    }\n\n    return pkg;\n  };\n\n  ex.formatters = formatters;\n  ex.utils = utils;\n  ex.Method = Method;\n  return ex;\n};\n\nmodule.exports = {\n  packageInit: function packageInit(pkg, args) {\n    if (!pkg) throw new Error('You need to instantiate using the \"new\" keyword.'); // make property of pkg._provider, which can properly set providers\n\n    Object.defineProperty(pkg, 'currentProvider', {\n      get: function get() {\n        return pkg._provider;\n      },\n      set: function set(value) {\n        return pkg.setProvider(value);\n      },\n      enumerable: true,\n      configurable: true\n    }); // inherit from parent package or create a new RequestManager\n\n    if (args[0] && args[0]._requestManager) {\n      pkg._requestManager = args[0]._requestManager;\n    } else {\n      pkg._requestManager = new Manager(args[0], args[1]);\n    }\n\n    pkg.providers = Manager.providers;\n    pkg._provider = pkg._requestManager.provider; // add SETPROVIDER function (don't overwrite if already existing)\n\n    if (!pkg.setProvider) {\n      pkg.setProvider = function (provider, net) {\n        pkg._requestManager.setProvider(provider, net);\n\n        pkg._provider = pkg._requestManager.provider;\n        return true;\n      };\n    }\n\n    pkg.setRequestManager = function (manager) {\n      pkg._requestManager = manager;\n      pkg._provider = manager.provider;\n    }; // attach batch request creation\n\n\n    pkg.BatchRequest = BatchManager.bind(null, pkg._requestManager);\n  },\n  providers: Manager.providers\n};","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/caver-js/packages/caver-core/src/index.js"],"names":["require","Manager","BatchManager","formatters","Method","utils","extend","pkg","ex","extension","extendedObject","property","methods","forEach","method","attachToObject","setRequestManager","_requestManager","module","exports","packageInit","args","Error","Object","defineProperty","get","_provider","set","value","setProvider","enumerable","configurable","providers","provider","net","manager","BatchRequest","bind"],"mappings":"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","sourcesContent":["/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nconst { Manager, BatchManager } = require('../../caver-core-requestmanager')\nconst formatters = require('../../caver-core-helpers').formatters\nconst Method = require('../../caver-core-method')\nconst utils = require('../../caver-utils')\n\n// TODO : clarify what extend do\n// eslint-disable-next-line no-unused-vars\nconst extend = pkg => {\n    const ex = extension => {\n        let extendedObject = pkg\n\n        if (extension.property) {\n            extendedObject = pkg[extension.property] = pkg[extension.property] || {}\n        }\n\n        if (extension.methods) {\n            extension.methods.forEach(method => {\n                if (!(method instanceof Method)) {\n                    method = new Method(method)\n                }\n\n                method.attachToObject(extendedObject)\n                method.setRequestManager(pkg._requestManager)\n            })\n        }\n\n        return pkg\n    }\n\n    ex.formatters = formatters\n    ex.utils = utils\n    ex.Method = Method\n\n    return ex\n}\n\nmodule.exports = {\n    packageInit: function(pkg, args) {\n        if (!pkg) throw new Error('You need to instantiate using the \"new\" keyword.')\n\n        // make property of pkg._provider, which can properly set providers\n        Object.defineProperty(pkg, 'currentProvider', {\n            get: function() {\n                return pkg._provider\n            },\n            set: function(value) {\n                return pkg.setProvider(value)\n            },\n            enumerable: true,\n            configurable: true,\n        })\n\n        // inherit from parent package or create a new RequestManager\n        if (args[0] && args[0]._requestManager) {\n            pkg._requestManager = args[0]._requestManager\n        } else {\n            pkg._requestManager = new Manager(args[0], args[1])\n        }\n\n        pkg.providers = Manager.providers\n        pkg._provider = pkg._requestManager.provider\n\n        // add SETPROVIDER function (don't overwrite if already existing)\n        if (!pkg.setProvider) {\n            pkg.setProvider = function(provider, net) {\n                pkg._requestManager.setProvider(provider, net)\n                pkg._provider = pkg._requestManager.provider\n                return true\n            }\n        }\n\n        pkg.setRequestManager = function(manager) {\n            pkg._requestManager = manager\n            pkg._provider = manager.provider\n        }\n\n        // attach batch request creation\n        pkg.BatchRequest = BatchManager.bind(null, pkg._requestManager)\n    },\n    providers: Manager.providers,\n}\n"]},"metadata":{},"sourceType":"script"}