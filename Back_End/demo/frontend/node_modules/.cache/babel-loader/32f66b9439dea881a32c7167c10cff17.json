{"ast":null,"code":"var _slicedToArray = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\n/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar RLP = require('eth-lib/lib/rlp');\n\nvar Bytes = require('eth-lib/lib/bytes');\n\nvar utils = require('../../../../caver-utils');\n\nvar helpers = require('../../../../caver-core-helpers');\n\nvar _helpers$constants = helpers.constants,\n    SMART_CONTRACT_DEPLOY_TYPE_TAG = _helpers$constants.SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    SMART_CONTRACT_EXECUTION_TYPE_TAG = _helpers$constants.SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG = _helpers$constants.FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n    CODE_FORMAT_EVM_TAG = _helpers$constants.CODE_FORMAT_EVM_TAG;\n\nfunction getCodeFormatTag(codeFormat) {\n  switch (codeFormat) {\n    case 0:\n    case 'EVM':\n      return CODE_FORMAT_EVM_TAG;\n  }\n\n  return CODE_FORMAT_EVM_TAG;\n}\n\nfunction rlpEncodeForContractDeploy(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForContractExecution(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode2 = _slicedToArray(_utils$rlpDecode, 10),\n        nonce = _utils$rlpDecode2[0],\n        gasPrice = _utils$rlpDecode2[1],\n        gas = _utils$rlpDecode2[2],\n        to = _utils$rlpDecode2[3],\n        value = _utils$rlpDecode2[4],\n        from = _utils$rlpDecode2[5],\n        data = _utils$rlpDecode2[6],\n        humanReadable = _utils$rlpDecode2[7],\n        codeFormat = _utils$rlpDecode2[8],\n        _utils$rlpDecode2$ = _slicedToArray(_utils$rlpDecode2[9], 1),\n        _utils$rlpDecode2$$ = _slicedToArray(_utils$rlpDecode2$[0], 3),\n        v = _utils$rlpDecode2$$[0],\n        r = _utils$rlpDecode2$$[1],\n        s = _utils$rlpDecode2$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode3 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode4 = _slicedToArray(_utils$rlpDecode3, 11),\n        nonce = _utils$rlpDecode4[0],\n        gasPrice = _utils$rlpDecode4[1],\n        gas = _utils$rlpDecode4[2],\n        to = _utils$rlpDecode4[3],\n        value = _utils$rlpDecode4[4],\n        from = _utils$rlpDecode4[5],\n        data = _utils$rlpDecode4[6],\n        humanReadable = _utils$rlpDecode4[7],\n        feeRatio = _utils$rlpDecode4[8],\n        codeFormat = _utils$rlpDecode4[9],\n        _utils$rlpDecode4$ = _slicedToArray(_utils$rlpDecode4[10], 1),\n        _utils$rlpDecode4$$ = _slicedToArray(_utils$rlpDecode4$[0], 3),\n        v = _utils$rlpDecode4$$[0],\n        r = _utils$rlpDecode4$$[1],\n        s = _utils$rlpDecode4$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, feeRatio, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(transaction.feeRatio), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode5 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode6 = _slicedToArray(_utils$rlpDecode5, 8),\n        nonce = _utils$rlpDecode6[0],\n        gasPrice = _utils$rlpDecode6[1],\n        gas = _utils$rlpDecode6[2],\n        to = _utils$rlpDecode6[3],\n        value = _utils$rlpDecode6[4],\n        from = _utils$rlpDecode6[5],\n        data = _utils$rlpDecode6[6],\n        _utils$rlpDecode6$ = _slicedToArray(_utils$rlpDecode6[7], 1),\n        _utils$rlpDecode6$$ = _slicedToArray(_utils$rlpDecode6$[0], 3),\n        v = _utils$rlpDecode6$$[0],\n        r = _utils$rlpDecode6$$[1],\n        s = _utils$rlpDecode6$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    var typeDetacehdRawTransaction = \"0x\".concat(transaction.senderRawTransaction.slice(4)); // eslint-disable-next-line no-unused-vars\n\n    var _utils$rlpDecode7 = utils.rlpDecode(typeDetacehdRawTransaction),\n        _utils$rlpDecode8 = _slicedToArray(_utils$rlpDecode7, 9),\n        nonce = _utils$rlpDecode8[0],\n        gasPrice = _utils$rlpDecode8[1],\n        gas = _utils$rlpDecode8[2],\n        to = _utils$rlpDecode8[3],\n        value = _utils$rlpDecode8[4],\n        from = _utils$rlpDecode8[5],\n        data = _utils$rlpDecode8[6],\n        feeRatio = _utils$rlpDecode8[7],\n        _utils$rlpDecode8$ = _slicedToArray(_utils$rlpDecode8[8], 1),\n        _utils$rlpDecode8$$ = _slicedToArray(_utils$rlpDecode8$[0], 3),\n        v = _utils$rlpDecode8$$[0],\n        r = _utils$rlpDecode8$$[1],\n        s = _utils$rlpDecode8$$[2];\n\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForContractDeploy: rlpEncodeForContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeploy: rlpEncodeForFeeDelegatedSmartContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeployWithRatio: rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\n  rlpEncodeForContractExecution: rlpEncodeForContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecution: rlpEncodeForFeeDelegatedSmartContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio: rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio\n};","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/contract.js"],"names":["RLP","require","Bytes","utils","helpers","constants","SMART_CONTRACT_DEPLOY_TYPE_TAG","SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG","CODE_FORMAT_EVM_TAG","getCodeFormatTag","codeFormat","rlpEncodeForContractDeploy","transaction","encode","fromNat","nonce","gasPrice","gas","to","toLowerCase","value","from","data","humanReadable","chainId","rlpEncodeForContractExecution","rlpEncodeForFeeDelegatedSmartContractDeploy","senderRawTransaction","typeDetacehdRawTransaction","slice","rlpDecode","v","r","s","feePayer","rlpEncodeForFeeDelegatedSmartContractDeployWithRatio","feeRatio","rlpEncodeForFeeDelegatedSmartContractExecution","rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RLP = require('eth-lib/lib/rlp')\nconst Bytes = require('eth-lib/lib/bytes')\nconst utils = require('../../../../caver-utils')\nconst helpers = require('../../../../caver-core-helpers')\n\nconst {\n    SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n    CODE_FORMAT_EVM_TAG,\n} = helpers.constants\n\nfunction getCodeFormatTag(codeFormat) {\n    switch (codeFormat) {\n        case 0:\n        case 'EVM':\n            return CODE_FORMAT_EVM_TAG\n    }\n    return CODE_FORMAT_EVM_TAG\n}\n\nfunction rlpEncodeForContractDeploy(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            SMART_CONTRACT_DEPLOY_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForContractExecution(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            SMART_CONTRACT_EXECUTION_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value || '0x0'),\n            transaction.from.toLowerCase(),\n            transaction.data,\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, codeFormat, [[v, r, s]]] = utils.rlpDecode(\n            typeDetacehdRawTransaction\n        )\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n                humanReadable,\n                codeFormat,\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, feeRatio, codeFormat, [[v, r, s]]] = utils.rlpDecode(\n            typeDetacehdRawTransaction\n        )\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n                humanReadable,\n                feeRatio,\n                codeFormat,\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\n            Bytes.fromNat(transaction.feeRatio),\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value || '0x0'),\n            transaction.from.toLowerCase(),\n            transaction.data,\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n                Bytes.fromNat(feeRatio),\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value || '0x0'),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.feeRatio),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nmodule.exports = {\n    rlpEncodeForContractDeploy,\n    rlpEncodeForFeeDelegatedSmartContractDeploy,\n    rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\n\n    rlpEncodeForContractExecution,\n    rlpEncodeForFeeDelegatedSmartContractExecution,\n    rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio,\n}\n"]},"metadata":{},"sourceType":"script"}