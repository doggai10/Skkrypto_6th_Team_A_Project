{"ast":null,"code":"var _classCallCheck = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\n/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar _ = require('lodash');\n\nvar AbstractFeeDelegatedTransaction = require('./abstractFeeDelegatedTransaction');\n\nvar utils = require('../../../caver-utils/src');\n/**\n * Abstract class that implements common logic for each fee delegated with ratio transaction type.\n * @class\n */\n\n\nvar AbstractFeeDelegatedWithRatioTransaction = /*#__PURE__*/function (_AbstractFeeDelegated) {\n  \"use strict\";\n\n  _inherits(AbstractFeeDelegatedWithRatioTransaction, _AbstractFeeDelegated);\n\n  var _super = _createSuper(AbstractFeeDelegatedWithRatioTransaction);\n\n  /**\n   * Abstract class that implements common logic for each fee-delegated with ratio transaction type.\n   * In this constructor, feeRatio is set as transaction member variables.\n   *\n   * @constructor\n   * @param {string} typeString - The type string of transaction.\n   * @param {object} createTxObj - The parameters to create an instance of transaction.\n   */\n  function AbstractFeeDelegatedWithRatioTransaction(typeString, createTxObj) {\n    var _this;\n\n    _classCallCheck(this, AbstractFeeDelegatedWithRatioTransaction);\n\n    _this = _super.call(this, typeString, createTxObj);\n    _this.feeRatio = createTxObj.feeRatio;\n    return _this;\n  }\n  /**\n   * @type {string}\n   */\n\n\n  _createClass(AbstractFeeDelegatedWithRatioTransaction, [{\n    key: \"feeRatio\",\n    get: function get() {\n      return this._feeRatio;\n    },\n    set: function set(fr) {\n      if (!_.isNumber(fr) && !utils.isHex(fr)) throw new Error(\"Invalid type fo feeRatio: feeRatio should be number type or hex number string.\");\n      if (utils.hexToNumber(fr) <= 0 || utils.hexToNumber(fr) >= 100) throw new Error(\"Invalid feeRatio: feeRatio is out of range. [1, 99]\");\n      this._feeRatio = utils.numberToHex(fr);\n    }\n  }]);\n\n  return AbstractFeeDelegatedWithRatioTransaction;\n}(AbstractFeeDelegatedTransaction);\n\nmodule.exports = AbstractFeeDelegatedWithRatioTransaction;","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/caver-js/packages/caver-transaction/src/transactionTypes/abstractFeeDelegatedWithRatioTransaction.js"],"names":["_","require","AbstractFeeDelegatedTransaction","utils","AbstractFeeDelegatedWithRatioTransaction","typeString","createTxObj","feeRatio","_feeRatio","fr","isNumber","isHex","Error","hexToNumber","numberToHex","module","exports"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAMC,+BAA+B,GAAGD,OAAO,CAAC,mCAAD,CAA/C;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,0BAAD,CAArB;AAEA;AACA;AACA;AACA;;;IACMG,wC;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,oDAAYC,UAAZ,EAAwBC,WAAxB,EAAqC;AAAA;;AAAA;;AACjC,8BAAMD,UAAN,EAAkBC,WAAlB;AACA,UAAKC,QAAL,GAAgBD,WAAW,CAACC,QAA5B;AAFiC;AAGpC;AAED;AACJ;AACA;;;;;wBACmB;AACX,aAAO,KAAKC,SAAZ;AACH,K;sBAEYC,E,EAAI;AACb,UAAI,CAACT,CAAC,CAACU,QAAF,CAAWD,EAAX,CAAD,IAAmB,CAACN,KAAK,CAACQ,KAAN,CAAYF,EAAZ,CAAxB,EACI,MAAM,IAAIG,KAAJ,kFAAN;AACJ,UAAIT,KAAK,CAACU,WAAN,CAAkBJ,EAAlB,KAAyB,CAAzB,IAA8BN,KAAK,CAACU,WAAN,CAAkBJ,EAAlB,KAAyB,GAA3D,EACI,MAAM,IAAIG,KAAJ,uDAAN;AAEJ,WAAKJ,SAAL,GAAiBL,KAAK,CAACW,WAAN,CAAkBL,EAAlB,CAAjB;AACH;;;;EA5BkDP,+B;;AA+BvDa,MAAM,CAACC,OAAP,GAAiBZ,wCAAjB","sourcesContent":["/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst _ = require('lodash')\nconst AbstractFeeDelegatedTransaction = require('./abstractFeeDelegatedTransaction')\nconst utils = require('../../../caver-utils/src')\n\n/**\n * Abstract class that implements common logic for each fee delegated with ratio transaction type.\n * @class\n */\nclass AbstractFeeDelegatedWithRatioTransaction extends AbstractFeeDelegatedTransaction {\n    /**\n     * Abstract class that implements common logic for each fee-delegated with ratio transaction type.\n     * In this constructor, feeRatio is set as transaction member variables.\n     *\n     * @constructor\n     * @param {string} typeString - The type string of transaction.\n     * @param {object} createTxObj - The parameters to create an instance of transaction.\n     */\n    constructor(typeString, createTxObj) {\n        super(typeString, createTxObj)\n        this.feeRatio = createTxObj.feeRatio\n    }\n\n    /**\n     * @type {string}\n     */\n    get feeRatio() {\n        return this._feeRatio\n    }\n\n    set feeRatio(fr) {\n        if (!_.isNumber(fr) && !utils.isHex(fr))\n            throw new Error(`Invalid type fo feeRatio: feeRatio should be number type or hex number string.`)\n        if (utils.hexToNumber(fr) <= 0 || utils.hexToNumber(fr) >= 100)\n            throw new Error(`Invalid feeRatio: feeRatio is out of range. [1, 99]`)\n\n        this._feeRatio = utils.numberToHex(fr)\n    }\n}\n\nmodule.exports = AbstractFeeDelegatedWithRatioTransaction\n"]},"metadata":{},"sourceType":"script"}