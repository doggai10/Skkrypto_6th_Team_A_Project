{"ast":null,"code":"var _assertThisInitialized = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _createClass = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\n/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar BaseKIP7 = require('./kip7');\n\nvar BaseKIP17 = require('./kip17');\n\nvar core = require('../../caver-core');\n\nvar _require = require('./kctHelper'),\n    validateDeployParameterForKIP7 = _require.validateDeployParameterForKIP7,\n    validateDeployParameterForKIP17 = _require.validateDeployParameterForKIP17,\n    kip7ByteCode = _require.kip7ByteCode,\n    kip17ByteCode = _require.kip17ByteCode;\n\nvar KCT = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function KCT() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _classCallCheck(this, KCT);\n\n    var _this = this; // sets _requestmanager\n\n\n    core.packageInit(this, args); // overwrite package setRequestManager\n\n    var setRequestManager = this.setRequestManager;\n\n    this.setRequestManager = function (manager) {\n      setRequestManager(manager);\n      _this.kip7._requestManager = _this._requestManager;\n      _this.kip7.currentProvider = _this._provider;\n      _this.kip17._requestManager = _this._requestManager;\n      _this.kip17.currentProvider = _this._provider;\n      return true;\n    }; // overwrite setProvider\n\n\n    var setProvider = this.setProvider;\n\n    this.setProvider = function () {\n      setProvider.apply(_this, arguments);\n\n      _this.setRequestManager(_this._requestManager);\n    }; // Define KIP7 class for caver-kct\n    // In this class, keyrings will be used instead of accounts\n\n\n    var KIP7 = /*#__PURE__*/function (_BaseKIP) {\n      _inherits(KIP7, _BaseKIP);\n\n      var _super = _createSuper(KIP7);\n\n      _createClass(KIP7, null, [{\n        key: \"deploy\",\n        value: function deploy(tokenInfo, deployer) {\n          validateDeployParameterForKIP7(tokenInfo);\n          var name = tokenInfo.name,\n              symbol = tokenInfo.symbol,\n              decimals = tokenInfo.decimals,\n              initialSupply = tokenInfo.initialSupply;\n          var kip7 = new KIP7();\n          return kip7.deploy({\n            data: kip7ByteCode,\n            arguments: [name, symbol, decimals, initialSupply]\n          }).send({\n            from: deployer,\n            gas: 4000000,\n            value: 0\n          });\n        }\n      }]);\n\n      function KIP7(tokenAddress, abi) {\n        var _this2;\n\n        _classCallCheck(this, KIP7);\n\n        _this2 = _super.call(this, tokenAddress, abi);\n\n        var self = _assertThisInitialized(_this2); // eslint-disable-line no-shadow\n\n\n        var setRequestManager = _this.setRequestManager; // eslint-disable-line no-shadow\n\n        _this.setRequestManager = function () {\n          setRequestManager.apply(_this, arguments);\n          core.packageInit(self, [_this]);\n        };\n\n        _this2.setKeyrings(args[0].wallet);\n\n        return _this2;\n      }\n\n      return KIP7;\n    }(BaseKIP7);\n\n    this.kip7 = KIP7; // Define KIP7 class for caver-kct\n    // In this class, keyrings will be used instead of accounts\n\n    var KIP17 = /*#__PURE__*/function (_BaseKIP2) {\n      _inherits(KIP17, _BaseKIP2);\n\n      var _super2 = _createSuper(KIP17);\n\n      _createClass(KIP17, null, [{\n        key: \"deploy\",\n        value: function deploy(tokenInfo, deployer) {\n          validateDeployParameterForKIP17(tokenInfo);\n          var name = tokenInfo.name,\n              symbol = tokenInfo.symbol;\n          var kip17 = new KIP17();\n          return kip17.deploy({\n            data: kip17ByteCode,\n            arguments: [name, symbol]\n          }).send({\n            from: deployer,\n            gas: 6600000,\n            value: 0\n          });\n        }\n      }]);\n\n      function KIP17(tokenAddress, abi) {\n        var _this3;\n\n        _classCallCheck(this, KIP17);\n\n        _this3 = _super2.call(this, tokenAddress, abi);\n\n        var self = _assertThisInitialized(_this3); // eslint-disable-line no-shadow\n\n\n        var setRequestManager = _this.setRequestManager; // eslint-disable-line no-shadow\n\n        _this.setRequestManager = function () {\n          setRequestManager.apply(_this, arguments);\n          core.packageInit(self, [_this]);\n        };\n\n        _this3.setKeyrings(args[0].wallet);\n\n        return _this3;\n      }\n\n      return KIP17;\n    }(BaseKIP17);\n\n    this.kip17 = KIP17;\n  }\n\n  return KCT;\n}();\n\nmodule.exports = KCT;","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/caver-js/packages/caver-kct/src/index.js"],"names":["BaseKIP7","require","BaseKIP17","core","validateDeployParameterForKIP7","validateDeployParameterForKIP17","kip7ByteCode","kip17ByteCode","KCT","args","_this","packageInit","setRequestManager","manager","kip7","_requestManager","currentProvider","_provider","kip17","setProvider","apply","arguments","KIP7","tokenInfo","deployer","name","symbol","decimals","initialSupply","deploy","data","send","from","gas","value","tokenAddress","abi","self","setKeyrings","wallet","KIP17","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst BaseKIP7 = require('./kip7')\nconst BaseKIP17 = require('./kip17')\nconst core = require('../../caver-core')\nconst { validateDeployParameterForKIP7, validateDeployParameterForKIP17, kip7ByteCode, kip17ByteCode } = require('./kctHelper')\n\nclass KCT {\n    constructor(...args) {\n        const _this = this\n\n        // sets _requestmanager\n        core.packageInit(this, args)\n\n        // overwrite package setRequestManager\n        const setRequestManager = this.setRequestManager\n        this.setRequestManager = function(manager) {\n            setRequestManager(manager)\n\n            _this.kip7._requestManager = _this._requestManager\n            _this.kip7.currentProvider = _this._provider\n            _this.kip17._requestManager = _this._requestManager\n            _this.kip17.currentProvider = _this._provider\n\n            return true\n        }\n\n        // overwrite setProvider\n        const setProvider = this.setProvider\n        this.setProvider = function() {\n            setProvider.apply(_this, arguments)\n            _this.setRequestManager(_this._requestManager)\n        }\n\n        // Define KIP7 class for caver-kct\n        // In this class, keyrings will be used instead of accounts\n        class KIP7 extends BaseKIP7 {\n            static deploy(tokenInfo, deployer) {\n                validateDeployParameterForKIP7(tokenInfo)\n\n                const { name, symbol, decimals, initialSupply } = tokenInfo\n                const kip7 = new KIP7()\n\n                return kip7\n                    .deploy({\n                        data: kip7ByteCode,\n                        arguments: [name, symbol, decimals, initialSupply],\n                    })\n                    .send({ from: deployer, gas: 4000000, value: 0 })\n            }\n\n            constructor(tokenAddress, abi) {\n                super(tokenAddress, abi)\n                const self = this // eslint-disable-line no-shadow\n                const setRequestManager = _this.setRequestManager // eslint-disable-line no-shadow\n                _this.setRequestManager = function() {\n                    setRequestManager.apply(_this, arguments)\n                    core.packageInit(self, [_this])\n                }\n\n                this.setKeyrings(args[0].wallet)\n            }\n        }\n\n        this.kip7 = KIP7\n\n        // Define KIP7 class for caver-kct\n        // In this class, keyrings will be used instead of accounts\n        class KIP17 extends BaseKIP17 {\n            static deploy(tokenInfo, deployer) {\n                validateDeployParameterForKIP17(tokenInfo)\n\n                const { name, symbol } = tokenInfo\n                const kip17 = new KIP17()\n\n                return kip17\n                    .deploy({\n                        data: kip17ByteCode,\n                        arguments: [name, symbol],\n                    })\n                    .send({ from: deployer, gas: 6600000, value: 0 })\n            }\n\n            constructor(tokenAddress, abi) {\n                super(tokenAddress, abi)\n                const self = this // eslint-disable-line no-shadow\n                const setRequestManager = _this.setRequestManager // eslint-disable-line no-shadow\n                _this.setRequestManager = function() {\n                    setRequestManager.apply(_this, arguments)\n                    core.packageInit(self, [_this])\n                }\n\n                this.setKeyrings(args[0].wallet)\n            }\n        }\n\n        this.kip17 = KIP17\n    }\n}\n\nmodule.exports = KCT\n"]},"metadata":{},"sourceType":"script"}