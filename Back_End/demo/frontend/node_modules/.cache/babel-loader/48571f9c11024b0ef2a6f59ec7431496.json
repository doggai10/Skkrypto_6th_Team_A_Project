{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    color: red;\\n    opacity: 0.7;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from\"react\";import SignUpPresenter from\"./SignUpPresenter\";import axios from\"axios\";import{useHistory}from\"react-router-dom\";import styled from\"styled-components\";import{cav}from\"Caver/caver\";import{signatureData}from\"caver-js/packages/caver-wallet/src/keyring/keyringFactory\";var Container=styled.div(_templateObject());var Error=styled.div(_templateObject2());var SignUpContainer=function SignUpContainer(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirm=_useState8[0],setCofirm=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),key=_useState10[0],setKeyring=_useState10[1];var history=useHistory();var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var SignData,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();SignData={name:name,email:email,password:password,key:key};console.log(SignData);_context.prev=3;_context.next=6;return axios.post(\"/sign-up\",SignData);case 6:res=_context.sent;alert(\"저장 성공!\");_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);console.log(_context.t0);case 13:history.push(\"/\");case 14:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var getKeyring=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var keyring;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return cav.wallet.keyring.generate();case 2:keyring=_context2.sent;setKeyring(keyring.address);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getKeyring(){return _ref2.apply(this,arguments);};}();var doesPasswordMatch=function doesPasswordMatch(){return password===confirm;};var renderFeedbackMessage=function renderFeedbackMessage(){if(confirm){if(!doesPasswordMatch()){return React.createElement(Error,null,\"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\");}}};var handleName=function handleName(e){setName(e.target.value);};var handleEmail=function handleEmail(e){setEmail(e.target.value);};var handlePassword=function handlePassword(e){setPassword(e.target.value);};var handleConfirmPassword=function handleConfirmPassword(e){setCofirm(e.target.value);};return React.createElement(Container,null,React.createElement(SignUpPresenter,{name:name,email:email,password:password,cofirm:confirm,handleName:handleName,handleEmail:handleEmail,handlePassword:handlePassword,handleConfirmPassword:handleConfirmPassword,handleSubmit:handleSubmit,renderFeedbackMessage:renderFeedbackMessage,doesPasswordMatch:doesPasswordMatch,getKeyring:getKeyring}));};export default SignUpContainer;","map":{"version":3,"sources":["/Users/kimdoheon/IdeaProjects/skkrypto/Back_End/demo/frontend/src/Routes/SignUp/SignUpContainer.js"],"names":["React","useState","SignUpPresenter","axios","useHistory","styled","cav","signatureData","Container","div","Error","SignUpContainer","name","setName","email","setEmail","password","setPassword","confirm","setCofirm","key","setKeyring","history","handleSubmit","e","preventDefault","SignData","console","log","post","res","alert","push","getKeyring","wallet","keyring","generate","address","doesPasswordMatch","renderFeedbackMessage","handleName","target","value","handleEmail","handlePassword","handleConfirmPassword"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { cav } from \"Caver/caver\";\nimport { signatureData } from \"caver-js/packages/caver-wallet/src/keyring/keyringFactory\";\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Error = styled.div`\n    color: red;\n    opacity: 0.7;\n`;\nconst SignUpContainer = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirm, setCofirm] = useState(\"\");\n    const [key, setKeyring] = useState(null);\n\n    const history = useHistory();\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const SignData = { name, email, password, key };\n        console.log(SignData);\n\n        try {\n            const res = await axios.post(\"/sign-up\", SignData);\n            alert(\"저장 성공!\");\n        } catch (e) {\n            console.log(e);\n        }\n        history.push(\"/\");\n    };\n\n    const getKeyring = async () => {\n        const keyring = await cav.wallet.keyring.generate();\n        setKeyring(keyring.address);\n    };\n    const doesPasswordMatch = () => {\n        return password === confirm;\n    };\n    const renderFeedbackMessage = () => {\n        if (confirm) {\n            if (!doesPasswordMatch()) {\n                return <Error>패스워드가 일치하지 않습니다.</Error>;\n            }\n        }\n    };\n    const handleName = (e) => {\n        setName(e.target.value);\n    };\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n    };\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const handleConfirmPassword = (e) => {\n        setCofirm(e.target.value);\n    };\n\n    return (\n        <Container>\n            <SignUpPresenter\n                name={name}\n                email={email}\n                password={password}\n                cofirm={confirm}\n                handleName={handleName}\n                handleEmail={handleEmail}\n                handlePassword={handlePassword}\n                handleConfirmPassword={handleConfirmPassword}\n                handleSubmit={handleSubmit}\n                renderFeedbackMessage={renderFeedbackMessage}\n                doesPasswordMatch={doesPasswordMatch}\n                getKeyring={getKeyring}\n            ></SignUpPresenter>\n        </Container>\n    );\n};\n\nexport default SignUpContainer;\n"]},"metadata":{},"sourceType":"module"}