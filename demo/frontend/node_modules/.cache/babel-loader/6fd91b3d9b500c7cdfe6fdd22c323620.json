{"ast":null,"code":"var _classCallCheck = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/demo/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/demo/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\n/*\n    Copyright 2019 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar AccountKeyPublic = require('../accountKey/accountKeyPublic');\n\nvar AccountKeyMultiSig = require('../accountKey/accountKeyMultiSig');\n\nvar AccountKeyRoleBased = require('../accountKey/accountKeyRoleBased');\n\nvar isAddress = require('../../../../caver-utils/src/utils').isAddress;\n\nvar addHexPrefix = require('../../../../caver-utils').addHexPrefix;\n\nvar Account =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(Account, null, [{\n    key: \"fromObject\",\n    value: function fromObject(obj) {\n      return new Account(obj.address, new AccountKeyPublic(obj.privateKey));\n    }\n  }, {\n    key: \"isAccountKey\",\n    value: function isAccountKey(accountKey) {\n      var isAccountKey = false;\n      if (accountKey instanceof AccountKeyPublic) isAccountKey = true;\n      if (accountKey instanceof AccountKeyMultiSig) isAccountKey = true;\n      if (accountKey instanceof AccountKeyRoleBased) isAccountKey = true;\n      return isAccountKey;\n    }\n  }]);\n\n  function Account(address, accountKey) {\n    _classCallCheck(this, Account);\n\n    if (!address || !accountKey) throw new Error('Failed to create Account. address and accountKey are needed to create Account.');\n    if (!isAddress(address)) throw new Error(\"Invalid address : \".concat(address));\n    if (!Account.isAccountKey(accountKey)) throw new Error('Invalid accountKey.');\n    address = addHexPrefix(address);\n    Object.defineProperty(this, 'address', {\n      get: function get() {\n        return address;\n      },\n      set: function set(addressInput) {\n        if (!isAddress(addressInput)) throw new Error(\"Invalid address : \".concat(addressInput));\n        address = addHexPrefix(addressInput);\n      },\n      enumerable: true\n    });\n    Object.defineProperty(this, 'accountKey', {\n      get: function get() {\n        return accountKey;\n      },\n      set: function set(accountKeyInput) {\n        if (!Account.isAccountKey(accountKeyInput) && accountKeyInput !== null) throw new Error('Invalid accountKey.');\n\n        if (accountKey === null || accountKeyInput === null) {\n          accountKey = accountKeyInput;\n        } else if (accountKey.type !== accountKeyInput.type) {\n          accountKey = accountKeyInput;\n        } else {\n          accountKey.update(accountKeyInput);\n        }\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'privateKey', {\n      get: function get() {\n        return this.accountKey.defaultKey;\n      },\n      set: function set() {\n        throw new Error('The privateKey cannot be modified. The privateKey is set to default key of accountKey, so update accountKey to modify the privateKey.');\n      },\n      enumerable: true\n    });\n  }\n\n  _createClass(Account, [{\n    key: \"toPublicKey\",\n    value: function toPublicKey(toPublicKeyFunc) {\n      return this.accountKey.toPublicKey(toPublicKeyFunc);\n    }\n  }, {\n    key: \"keys\",\n    get: function get() {\n      return this.accountKey.keys;\n    }\n  }, {\n    key: \"accountKeyType\",\n    get: function get() {\n      return this.accountKey.type;\n    }\n  }, {\n    key: \"transactionKey\",\n    get: function get() {\n      return this.accountKey.transactionKey;\n    }\n  }, {\n    key: \"updateKey\",\n    get: function get() {\n      return this.accountKey.updateKey;\n    }\n  }, {\n    key: \"feePayerKey\",\n    get: function get() {\n      return this.accountKey.feePayerKey;\n    }\n  }]);\n\n  return Account;\n}();\n\nmodule.exports = Account;","map":null,"metadata":{},"sourceType":"script"}