{"ast":null,"code":"var _classCallCheck = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/demo/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kimdoheon/IdeaProjects/skkrypto/demo/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\n/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar _require = require('../transactionHelper/transactionHelper'),\n    TX_TYPE_STRING = _require.TX_TYPE_STRING,\n    typeDetectionFromRLPEncoding = _require.typeDetectionFromRLPEncoding;\n\nvar LegacyTransaction = require('../transactionTypes/legacyTransaction/legacyTransaction');\n\nvar ValueTransfer = require('../transactionTypes/valueTransfer/valueTransfer');\n\nvar FeeDelegatedValueTransfer = require('../transactionTypes/valueTransfer/feeDelegatedValueTransfer');\n\nvar FeeDelegatedValueTransferWithRatio = require('../transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio');\n\nvar ValueTransferMemo = require('../transactionTypes/valueTransferMemo/valueTransferMemo');\n\nvar FeeDelegatedValueTransferMemo = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo');\n\nvar FeeDelegatedValueTransferMemoWithRatio = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio');\n\nvar AccountUpdate = require('../transactionTypes/accountUpdate/accountUpdate');\n\nvar FeeDelegatedAccountUpdate = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdate');\n\nvar FeeDelegatedAccountUpdateWithRatio = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio');\n\nvar SmartContractDeploy = require('../transactionTypes/smartContractDeploy/smartContractDeploy');\n\nvar FeeDelegatedSmartContractDeploy = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy');\n\nvar FeeDelegatedSmartContractDeployWithRatio = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio');\n\nvar SmartContractExecution = require('../transactionTypes/smartContractExecution/smartContractExecution');\n\nvar FeeDelegatedSmartContractExecution = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution');\n\nvar FeeDelegatedSmartContractExecutionWithRatio = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio');\n\nvar Cancel = require('../transactionTypes/cancel/cancel');\n\nvar FeeDelegatedCancel = require('../transactionTypes/cancel/feeDelegatedCancel');\n\nvar FeeDelegatedCancelWithRatio = require('../transactionTypes/cancel/feeDelegatedCancelWithRatio');\n\nvar ChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/chainDataAnchoring');\n\nvar FeeDelegatedChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring');\n\nvar FeeDelegatedChainDataAnchoringWithRatio = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio');\n/**\n * Representing a transaction decoder.\n * @class\n */\n\n\nvar TransactionDecoder =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function TransactionDecoder() {\n    _classCallCheck(this, TransactionDecoder);\n  }\n\n  _createClass(TransactionDecoder, null, [{\n    key: \"decode\",\n\n    /**\n     * Decodes RLP-encoded transaction string and returns a Transaction instance.\n     * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\n     * @return {Transaction}\n     */\n    value: function decode(rlpEncoded) {\n      var type = typeDetectionFromRLPEncoding(rlpEncoded);\n\n      switch (type) {\n        case TX_TYPE_STRING.TxTypeLegacyTransaction:\n          return LegacyTransaction.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeValueTransfer:\n          return ValueTransfer.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n          return FeeDelegatedValueTransfer.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n          return FeeDelegatedValueTransferWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeValueTransferMemo:\n          return ValueTransferMemo.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n          return FeeDelegatedValueTransferMemo.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n          return FeeDelegatedValueTransferMemoWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeAccountUpdate:\n          return AccountUpdate.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n          return FeeDelegatedAccountUpdate.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n          return FeeDelegatedAccountUpdateWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n          return SmartContractDeploy.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n          return FeeDelegatedSmartContractDeploy.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n          return FeeDelegatedSmartContractDeployWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeSmartContractExecution:\n          return SmartContractExecution.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n          return FeeDelegatedSmartContractExecution.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n          return FeeDelegatedSmartContractExecutionWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeCancel:\n          return Cancel.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n          return FeeDelegatedCancel.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n          return FeeDelegatedCancelWithRatio.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n          return ChainDataAnchoring.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n          return FeeDelegatedChainDataAnchoring.decode(rlpEncoded);\n\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n          return FeeDelegatedChainDataAnchoringWithRatio.decode(rlpEncoded);\n      }\n    }\n  }]);\n\n  return TransactionDecoder;\n}();\n\nmodule.exports = TransactionDecoder;","map":null,"metadata":{},"sourceType":"script"}