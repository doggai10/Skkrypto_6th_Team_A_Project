{"ast":null,"code":"/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nvar _ = require('lodash');\n\nvar WeightedMultiSigOptions = require('./weightedMultiSigOptions');\n\nvar ACCOUNT_KEY_TAG = {\n  ACCOUNT_KEY_NIL_TAG: '0x80',\n  ACCOUNT_KEY_LEGACY_TAG: '0x01c0',\n  ACCOUNT_KEY_PUBLIC_TAG: '0x02',\n  ACCOUNT_KEY_FAIL_TAG: '0x03c0',\n  ACCOUNT_KEY_WEIGHTED_MULTISIG_TAG: '0x04',\n  ACCOUNT_KEY_ROLE_BASED_TAG: '0x05'\n};\n/**\n * Creates and returns the valid instance of WeightedMultiSigOptions for AccountKeyWeightedMultiSig.\n * If the user does not define the values of options(threshold, weights),\n * default options(threshold is 1 and the weight of each key is 1) are returned.\n *\n * @param {number} lengthOfKeys The lenght of keys.\n * @param {WeightedMultiSigOptions|object} [options] An instance of WeightedMultiSigOptions or an object that defines 'threshold' and 'weight'.\n * @return {WeightedMultiSigOptions}\n */\n\nvar fillWeightedMultiSigOptionsForMultiSig = function fillWeightedMultiSigOptionsForMultiSig(lengthOfKeys, options) {\n  if (_.isArray(options)) throw new Error(\"For AccountKeyWeightedMultiSig, options cannot be defined as an array of WeightedMultiSigOptions.\");\n  if (!options) options = new WeightedMultiSigOptions(1, Array(lengthOfKeys).fill(1));\n  if (!(options instanceof WeightedMultiSigOptions)) options = WeightedMultiSigOptions.fromObject(options);\n  return options.isEmpty() ? new WeightedMultiSigOptions(1, Array(lengthOfKeys).fill(1)) : options;\n};\n/**\n * Creates and returns the valid instance of WeightedMultiSigOptions for AccountKeyRoleBased.\n * If the user does not define the values of options(threshold, weights),\n * default options(threshold is 1 and the weight of each key is 1) will be used for each role key.\n *\n * @param {Array.<number>} lengthOfKeys The lenght of keys.\n * @param {Array.<WeightedMultiSigOptions>|Array.<object>} [options] An array of WeightedMultiSigOptions or object that defines 'threshold' and 'weight'.\n * @return {Array.<WeightedMultiSigOptions>}\n */\n\n\nvar fillWeightedMultiSigOptionsForRoleBased = function fillWeightedMultiSigOptionsForRoleBased(lengthOfKeys) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!_.isArray(options)) throw new Error(\"For AccountKeyRoleBased, options should be an array of WeightedMultiSigOptions.\");\n\n  for (var i = 0; i < lengthOfKeys.length; i++) {\n    if (options[i] && !(options[i] instanceof WeightedMultiSigOptions)) {\n      options[i] = WeightedMultiSigOptions.fromObject(options);\n    } // If the WeightedMultiSigOptions instance is not empty,\n    // it means that the user has defined the option parameters needed when updating to AccountKeyWeightedMultiSig.\n\n\n    if (options[i] && !options[i].isEmpty()) continue;\n    var optionToAdd = void 0;\n\n    if (lengthOfKeys[i] > 1) {\n      // default option when option is not set\n      optionToAdd = new WeightedMultiSigOptions(1, Array(lengthOfKeys[i]).fill(1));\n    } else {\n      // AccountKeyPublic does not need option\n      optionToAdd = new WeightedMultiSigOptions();\n    }\n\n    if (options[i]) {\n      options[i] = optionToAdd;\n    } else {\n      options.push(optionToAdd);\n    }\n  }\n\n  return options;\n};\n\nmodule.exports = {\n  ACCOUNT_KEY_TAG: ACCOUNT_KEY_TAG,\n  fillWeightedMultiSigOptionsForMultiSig: fillWeightedMultiSigOptionsForMultiSig,\n  fillWeightedMultiSigOptionsForRoleBased: fillWeightedMultiSigOptionsForRoleBased\n};","map":null,"metadata":{},"sourceType":"script"}